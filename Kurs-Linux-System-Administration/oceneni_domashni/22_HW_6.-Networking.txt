# 1. Create a routing table called lsa. Then add all of your existing routes to it. And finally make your machine use that table instead of table 'main'.

# Become Root:
sudo su -

# Create a routing table called lsa:
echo 2 lsa >> /etc/iproute2/rt_tables


# Add all of your existing routes to lsa:

# Create file lsa.txt with a list of all routing tables:

routeTables=`ip ru l | awk '{print $5 }' | xargs`
routeTables=($routeTables)
for table in ${routeTables[*]}; do ip r l t $table >> lsa.txt; done

# We run command "ip r add table lsa" with argument each line in lsa.txt:

while read -r line; do ip r add table lsa ${line}; done < "lsa.txt"


# Make your machine use that table instead of table 'main':
# Add the new table with highest priority in rules
ip rule add from all lookup lsa prio 0

----------------------------------------------------------------------------

Inputs and outputs:

INPUT:
cat /etc/iproute2/rt_tables  # Chack what rooting tables are available
OUTPUT
#
# reserved values
#
255     local
254     main
253     default
0       unspec
#
# local
#
#1      inr.ruhep

INPUT
echo 2 lsa >> /etc/iproute2/rt_tables    # Create a routing table called lsa
cat /etc/iproute2/rt_tables  # Chack what rooting tables are available
OUTPUT
#
# reserved values
#
255     local
254     main
253     default
0       unspec
#
# local
#
#1      inr.ruhep
2 lsa

INPUT
# Create file with a list of all routing tables:
routeTables=`ip ru l | awk '{print $5 }' | xargs`
routeTables=($routeTables)
for table in ${routeTables[*]}; do ip r l t $table >> lsa.txt; done
cat lsa.txt    # check the result
OUTPUT
broadcast 127.0.0.0 dev lo  proto kernel  scope link  src 127.0.0.1 
local 127.0.0.0/8 dev lo  proto kernel  scope host  src 127.0.0.1 
local 127.0.0.1 dev lo  proto kernel  scope host  src 127.0.0.1 
broadcast 127.255.255.255 dev lo  proto kernel  scope link  src 127.0.0.1 
broadcast 169.254.0.0 dev eth0  proto kernel  scope link  src 169.254.5.237 
local 169.254.5.237 dev eth0  proto kernel  scope host  src 169.254.5.237 
broadcast 169.254.255.255 dev eth0  proto kernel  scope link  src 169.254.5.237 
broadcast 192.168.0.0 dev wlan0  proto kernel  scope link  src 192.168.0.100 
local 192.168.0.100 dev wlan0  proto kernel  scope host  src 192.168.0.100 
broadcast 192.168.0.255 dev wlan0  proto kernel  scope link  src 192.168.0.100 
default via 192.168.0.1 dev wlan0  proto static 
default dev eth0  scope link  metric 1002 
169.254.0.0/16 dev eth0  proto kernel  scope link  src 169.254.5.237 
192.168.0.0/24 dev wlan0  proto kernel  scope link  src 192.168.0.100 
COMMENT
# We can compate the result with the content of the individual routing tables:
root@LenovoDebian:~# ip r l t local
broadcast 127.0.0.0 dev lo  proto kernel  scope link  src 127.0.0.1 
local 127.0.0.0/8 dev lo  proto kernel  scope host  src 127.0.0.1 
local 127.0.0.1 dev lo  proto kernel  scope host  src 127.0.0.1 
broadcast 127.255.255.255 dev lo  proto kernel  scope link  src 127.0.0.1 
broadcast 169.254.0.0 dev eth0  proto kernel  scope link  src 169.254.5.237 
local 169.254.5.237 dev eth0  proto kernel  scope host  src 169.254.5.237 
broadcast 169.254.255.255 dev eth0  proto kernel  scope link  src 169.254.5.237 
broadcast 192.168.0.0 dev wlan0  proto kernel  scope link  src 192.168.0.100 
local 192.168.0.100 dev wlan0  proto kernel  scope host  src 192.168.0.100 
broadcast 192.168.0.255 dev wlan0  proto kernel  scope link  src 192.168.0.100 
root@LenovoDebian:~# 
root@LenovoDebian:~# ip r l t main
default via 192.168.0.1 dev wlan0  proto static 
default dev eth0  scope link  metric 1002 
169.254.0.0/16 dev eth0  proto kernel  scope link  src 169.254.5.237 
192.168.0.0/24 dev wlan0  proto kernel  scope link  src 192.168.0.100 
root@LenovoDebian:~# 
root@LenovoDebian:~# ip r l t default
root@LenovoDebian:~# 
root@LenovoDebian:~# ip r l t lsa
root@LenovoDebian:~# 
# We can see that tables lsa and default are empty

INPUT
while read -r line; do ip r add table lsa ${line}; done < "lsa.txt"
ip r l t lsa		# we check the content of table lsa
OUTPUT
default via 192.168.0.1 dev wlan0  proto static 
default dev eth0  scope link  metric 1002 
broadcast 127.0.0.0 dev lo  proto kernel  scope link  src 127.0.0.1 
local 127.0.0.0/8 dev lo  proto kernel  scope host  src 127.0.0.1 
local 127.0.0.1 dev lo  proto kernel  scope host  src 127.0.0.1 
broadcast 127.255.255.255 dev lo  proto kernel  scope link  src 127.0.0.1 
broadcast 169.254.0.0 dev eth0  proto kernel  scope link  src 169.254.5.237 
169.254.0.0/16 dev eth0  proto kernel  scope link  src 169.254.5.237 
local 169.254.5.237 dev eth0  proto kernel  scope host  src 169.254.5.237 
broadcast 169.254.255.255 dev eth0  proto kernel  scope link  src 169.254.5.237 
broadcast 192.168.0.0 dev wlan0  proto kernel  scope link  src 192.168.0.100 
192.168.0.0/24 dev wlan0  proto kernel  scope link  src 192.168.0.100 
local 192.168.0.100 dev wlan0  proto kernel  scope host  src 192.168.0.100 
broadcast 192.168.0.255 dev wlan0  proto kernel  scope link  src 192.168.0.100 

INPUT
ip ru l
ip rule add from all lookup lsa prio 0
ip ru l
OUTPUT
root@LenovoDebian:~# ip ru l
0:      from all lookup local 
32766:  from all lookup main 
32767:  from all lookup default 
root@LenovoDebian:~# 
root@LenovoDebian:~# ip rule add from all lookup lsa prio 0
root@LenovoDebian:~# 
root@LenovoDebian:~# ip ru l
0:      from all lookup local 
0:      from all lookup lsa 
32766:  from all lookup main 
32767:  from all lookup default 
COMMENT
We have added table lsa with hihgest priority than main

------------------------------------------------------------------------------------------

REFERENCES
http://linux-ip.net/html/ch-routing.html - very good routing concepts description plus examples

ЗАБЕЛЕЖКА:
Добро домашно. Има обяснения и е даден аутпут от командния ред.
Успех.
