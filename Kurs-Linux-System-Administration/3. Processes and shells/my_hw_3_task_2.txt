2. Describe the RBAC security model.

ИЗТОЧНИК - 1: http://www.cgisecurity.com/owasp/html/ch08s03.html

Role Based Access Control

In Role-Based Access Control (RBAC), access decisions are based on an individual's roles and responsibilities within the organization or user base. 
The process of defining roles is usually based on analyzing the fundamental goals and structure of an organization and is usually linked to the security policy. 
For instance, in a medical organization, the different roles of users may include those such as doctor, nurse, attendant, nurse, patients, etc. 
Obviously, these members require different levels of access in order to perform their functions, but also the types of web transactions and their allowed context vary greatly depending on the security policy and any relevant regulations (HIPAA, Gramm-Leach-Bliley, etc.).

An RBAC access control framework should provide web application security administrators with the ability to determine who can perform what actions, when, from where, in what order, and in some cases under what relational circumstances. 
http://csrc.nist.gov/rbac/ provides some great resources for RBAC implementation. 
The following aspects exhibit RBAC attributes to an access control model.

    1.Roles are assigned based on organizational structure with emphasis on the organizational security policy

    2.Roles are assigned by the administrator based on relative relationships within the organization or user base. For instance, a manager would have certain authorized transactions over his employees. An administrator would have certain authorized transactions over his specific realm of duties (backup, account creation, etc.)

    3.Each role is designated a profile that includes all authorized commands, transactions, and allowable information access.

    4.Roles are granted permissions based on the principle of least privilege.

    5.Roles are determined with a separation of duties in mind so that a developer Role should not overlap a QA tester Role.

    6.Roles are activated statically and dynamically as appropriate to certain relational triggers (help desk queue, security alert, initiation of a new project, etc.)

    7.Roles can be only be transferred or delegated using strict sign-offs and procedures.

    8.Roles are managed centrally by a security administrator or project leader. 
	
