HW - 7:

5. Describe the procedure for creating an RPM based repository.

Creating a Repository for RPMs and Creating own RPM repo installer

Install the necessary tools
yum install rpm-sign gnupg

Now create the gpg certificates
gpg –gen-key
select default for everything, then enter a password

Edit the file /home/username/.rpmmacros and add the macro
%_gpg_name “email-address”

where email address is your email address.

Note: If you are using a package that is already found inside the fedora repositories, you will need to increment the release number, so that your release number is higher. 
After doing this, the package with the highest release number will be installed.

Next sign your rpm packages
rpm –addsign units-2.00-9.fc17.x86_64.rpm

Add your key to the list of allowed keys to use. 
If you do not add your key to the allowed list of keys on each computer using your repo, then you will not be allowed to install the package. 
This will result in this error:
warning: rpmts_HdrFromFdno: Header V4 RSA/SHA1 Signature, key ID f2f80ec8: NOKEY

So, instead of getting this error, lets add the key to the list. First as the same user that you ran “gpg –gen-key” as, run:
gpg –export –armour EMAIL-ADDRESS

Where the email is the one entered in the previous steps. 
Copy the output, which should be your public key, and place it in a file in the directory /etc/pki/rpm-gpg/ for example:
sudo vi /etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-oatley
then paste the key inside this file




Източник:
http://andrewow.wordpress.com/2012/10/13/creating-rpm-repositories-and-making-a-repository-installer/

Други:
http://wiki.centos.org/HowTos/CreateLocalRepos
http://www.webmo.net/support/yum_repository.html
http://www.techrepublic.com/blog/linux-and-open-source/create-your-own-yum-repository/
http://linuxsysconfig.com/2013/04/create-a-yum-repository-with-custom-gpg-signed-packages/

-----------------------------------------------------------------------------------------

http://www.practicalweb.co.uk/blog/12/11/21/how-create-custom-yum-repository-centos-6

If you want to create custom rpms and install then with the usual automated dependency management you'll need your own yum repository. 
This is just the RPMS and metadata in the format of static xml files served by a webserver.

First you need a GPG key to sign your packages.

	# make some randomness if running headless
	sudo rngd -r /dev/urandom
	# start the agent
	gpg-agent --use-standard-socket --daemon
	# interactive key generation (accept the defaults for key type, provide your name and email when promted)
	gpg --gen-key
	#
	gpg --export -a 'My Name' > MY-RPM-GPG-KEY

You won't need the random generator if you do this on a desktop, but on a headless system I found I needed this. 
These actions will store a private key in your keyring, and a public key in the specified file.

Build your rpm
First configure rpm to use the key you just added to your key ring, checing you don't oveerwrite earlier configuration).

	[ ! -f ~/.rpmmacros ] && echo '%_signature gpg
	%_gpg_name My Name
	' > ~/.rpmmacros

Now build your RPM (assuming you are already setup to do this).

	rpmbuild -bb --sign ~/rpmbuild/SPECS/my-project.spec

Setup the Yum Repo
Setup apache, make the directory structure, with teh repo files. This can be the same or a different server to your build machine.

	# make the repo base url
	sudo mkdir -p /var/www/html/myrepo
	# make it wrietable by you normal account
	sudo chown $(id -un).$(id -gn) /var/www/html/myrepo
	# copy you rpm files
	cp *rpm /var/www/html/myrepo
	# create the metadata
	createrepo /var/www/html/myrepo

	# Setup an apache Alias for this directory
	echo 'Alias /myrepo/ /var/www/html/myrepo/
	' > /etc/httpd/conf.d/my-yum-repo

	# restart Apache to pickup the change
	service restart httpd

Configure the system that will use the custom repo

Copy over the GPG key, and import it into the rpm database.

	sudo rpm --import MY-RPM-GPG-KEY

Configure yum to use the new repo.

	echo '[my-repo]
	name=My Custom Packages
	baseurl=http://yum.example.com/myrepo
	> /etc/yum.repos.d/my.repo

Now we should be able to install our custom packages with regular yum commands. 
When update rpms just re-run the createrepo command to update the metadata.



