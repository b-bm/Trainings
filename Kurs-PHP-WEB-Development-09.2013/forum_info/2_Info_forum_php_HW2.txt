[PHP] Лекция 4, Домашно 2 - дискусия и решения:

http://forums.academy.telerik.com/120745/php-%D0%BB%D0%B5%D0%BA%D1%86%D0%B8%D1%8F-4-%D0%B4%D0%BE%D0%BC%D0%B0%D1%88%D0%BD%D0%BE-2-%D0%B4%D0%B8%D1%81%D0%BA%D1%83%D1%81%D0%B8%D1%8F-%D0%B8-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D1%8F


Source code
https://github.com/NasC0/telerik_php/tree/master/UploadManager
 
Описание
Да се създаде система за качане на файлове от web страница. 
Домапната трябва да съдържа следната минимална 
функционалност:
● Системата да е достъпна само след вход чрез формата за вход
● Потребителя да може да качва произволни файлове
● Да има екран, в който се показват всичките му файлове
● Системата трябва да работи със сесии
● Всички файлове трябва да се записват в една папка, която е 
видима от web server
● Името и паролата на валидния потребител са записани в 
текстови файл или в PHP променлива. С цел улесняване на 
тестването, нека името да е "user" а паролата "qwerty"
 
Обяснение
Чете и пише всички потребители в "database/userbase.txt". 
Login формата проверява дали файла съществува, и ако да explode-ва userbase и проверява ред по ред дали username & password съвпадат. 
Държа isLogged и username в суперглобалната $_SERVER за да ги използвам при проверка от останалите страници дали има активна потребителска сесия. 
Създавам папка за съответния username и чрез $_SERVER['username'] чета и пиша в съответната папка ("database/username"). 
За download използвам подаване на filename чрез URL-a към скрипта download.php, който прихваща името на файла и го подава към HTTP header за сваляне.
Решил съм и двете допълнителни задачи, като за filesize визуализацията използвам вградената функция filesize($path) и допълнителна функция за форматирането на размера. 
Имплементирах и проста форма за регистрация на потребители, която автоматично създава папка в "database" с името на потребителя, и там пълня качението от него файлове.
 
Ресурси
За download header-a погледнах няколко теми в StackOverflow. Ударих малко на камък, когато се опитах да използвам вградените в PHP функции за изкарване на Mime_type на качените файлове, затова в header-a използвах 'Content-Type: application/octet-stream'.
Линкове към ресурсите за header-a:
http://stackoverflow.com/questions/12094080/download-files-from-server-php
http://stackoverflow.com/questions/10615797/utility-of-http-header-content-type-application-force-download-for-mobile
Линк към ресурсите за форматиращата функция за размер на файла:
http://stackoverflow.com/questions/5501427/php-filesize-mb-kb-conversion
 
ToDo:
Допълнителна валидация.
Коментиране на кода.
Евентуално password hashing за паролите в userbase

 --> Мисля че нямаш предвид $_SERVER, a $_SESSION.
	|-> Мда, недогледъл съм, мерси много.

 --> Някой опита ли да покаже размера на файла, аз се боря с функцията filesize(), която се оказва,че не работи с локални фаилове.
	|-> Аз лично нямах проблем с filesize(), обаче показвам пътя чрез realpath, може би от там идва проблема? 
		Ако искаш погледни https://github.com/NasC0/telerik_php/blob/master/UploadManager/files.php ($userDir ми е дефинирана в header.php)
		by Наско Маринов
	|-> Това е бил проблема благодаря оправих го.

===========================================================================================

Ето какво разцъках и аз за няколко дена след работа.
Имаме следните основни файлове:

    login.php - вход за потребителя и стартиране на нова сесия
    register.php - регистрация на нов потребител и създаване на папка.
    index.php - визуализация на съдържанието на папката за конкретния потребител
    logout.php - унищожава сесията и връща към login.php

Потребителите се записват в текстови файл в папката database/users.txt
При всяка нова регистрация се създава нова папка в директорията 'userFolders'.
Тук може да погледнете/свалите кода от домашното:
https://github.com/nzhul/PHP/tree/master/02-SimpleFileStorage

А от тук може да видите Live версия:
http://nzhul.cloudvps.bg/02-SimpleFileStorage/login.php

Предполагам, че има доста бъгове, за това ще се радвам ако споделите, какво не е наред според вас или ако има друго нещо, което не ви харесва.

 --> Браво, колега, за решението! Малко коментари:
1. Красив дизайн.
2. Във файл index.php в редовете от 28 до 47 правиш излишни проверки. 
Така, както ти е в момента, винаги ще имаш 4-ри проверки. Просто използвай конструкцията "if-else-if" и така ако примерно първата проверка е вярна, няма да продължи с останалите.
3. След успешна регистрация е логично да си вече логнат с новия акаунт и да те препрати към страницата с файловете, т.е. index.php в твоя случай.
4. Във файла login.php на ред 30-ти:
$_SESSION['isLogged'] = true; // ти имаш това
$_SESSION['isLogged'] = false; // така също си работи без проблем
Сам се сети защо :).
5. Когато избера файл за качване бутонът става зелен. Интуитивно подканва да бъде натиснат отново. 
И точно преди да го натисне потребителят се зачита какво има вътре. Казва си, да, на прав път, тук пише да го press-на. 
И когато вече пръстът му точно ще натисне, прочита и продължението: ...Upload. 
Готино се е получило с бутончето, но не е добре от гледна точка на UX.
by Georgi Yankov
	|-> @Georgi Yankov Благодаря за рецензията колега
		2.Абсолятно си прав - промених кода.
		3.Може би си прав - аз на повечето места съм свикнал първо да си направя регистрация и след това да ме подканя да се логна. 
		Но това се дължи предполагам на факта, че на повечето сайтове се изисква email верификация на регистрацията, а тук тъй като нямам е редно директно да си логнат. 
		Може да го направя така наистина.
		4.И за това си прав - не се бях замислял. Работи и с false понеже навсякъде правя проверка дали променливата $_SESSION['isLogged'] изобщо съществува - без да се интересувам каква е нейната стойност. 
		Когато потребителя зареди файла logout.php той реално унищожава бисквитката за сесията и вече тази проверка не минава. 
		Кода работи така - незнам как е коректно да се напрвани иначе.
		5.И това е така - кофти UI се получи. Най добрия вариант щеше да е да използвам Javascript и да пращам Ajax заявка директно след като файла е селектиран, но не исках да натоварвам прекалено много приложението с javascript, понеже на няколко пъти се спомена, че е добре да се придържаме към стандартните неща. 
		Другия вариант е да си оставя default дизайна на input [type="file"], който е доста грозен, но поне хората са свикнали с него.
		Като цяло нещата може да се изпипат наистина доста по-добре, но в един момент реших да претупам някой неща, понеже времето ми е малки лимитирано.
		Благодаря ти отново, че си отделил време да погледнеш кода.
		by nzhul
	|-> Моля.
		2.Май не си правил промени в GIT.
		3.Да, когато се изисква email верификация е друга работа.
		4.Според мен е по-логично проверката дали имаш логнат потребител е да ти бъде така:
		if (isset($_SESSION['isLogged']) && $_SESSION['isLogged'] == true) { ... }
		Аз това съм си го изнесъл във функция: http://pastebin.com/12i8Wc7F
		by Georgi Yankov
===========================================================================================

https://github.com/bobbykolev/php/tree/master/FileUpload
Логин и регистър в .txt файл. Качване на файлове в папка на съответния юзер, проверки за съществуващ юзер във файла. 
10x на Наско Маринов за линковете, особено за файл сайз и линка за сваляне.
Възможно е да съм изпуснал някоя проверка...
Изгубих много часове и нерви докато установя, че не логиката ми не работи а просто първия запис във файла, а именно - 'user' както и да го трим-вам ми се връща с дължина 7 и оттам никакви проверки не ми излизаха. 
Освен трим с един параметър, добавях и със запетая "\t,\n,\b....." - същия резултат. 
Някой ако има идея да сподели.
10x и на  nzhul за delete-а.
Едит:
10x и на колегата (ите), който редовно ме хаква :) имам остра нужда от лекции за секюрити  :).
by bobbykolev

 --> Нещо свалянето на файлове не ти работи както трябва
	 	by Georgi Yankov
	|-> Благодаря ти Георги. С този код: http://www.php.net/manual/en/function.header.php#102175
		работи екстра сега.
		by bobbykolev

===========================================================================================

https://github.com/whitefinity/uploading_files

Демо версията ми е с 2 потребителя user/qwerty и user2/qwerty2 зада не се създават излишни нови папки за новите потребители! 
Поради тази причина не съм и добавил валидация за нови потребители. 
Направил съм сесиите ви да са 10 мин и автоматично да ви изкарват на началната страница. 
Максимално съм се придържал към задачата и не съм правил допълнителни функции и щуротии. 
Страничката покрива минималните изисквания за сигурност като например да не си сменяте usera или да се качите в по-горна директория чрез URL и някои други допълнителни неща.
by plamenyankov

 --> Благодаря за споделеното решение, колега! От теб си взаимствах кода за това как при клик може да се сваля файл.
	 По-натам ще поразгледам целия ти код, че определено има доста интересни неща.
	 PS. Когато ти се свали цялото решение от GIT и дава някакви грешки при зарежане в браузъра. --> ОК са няма грешка!!!
	 by Georgi Yankov
	|-> Взаимствах от теб и сесията да се унищожава при неактивен потребител. А ти защо ползваш функцията abs() във:
		$diff=abs(time()-$_SESSION['time']);
		EDIT:
		И още да попитам, защо ползваш това във файла logout.php
		if (isset($_COOKIE[session_name()])) {
		setcookie(session_name(), '', time()-42000, '/');
		}
		by Georgi Yankov
	|-> За да не ми се получи отрицателен знак по случайност, не е нужно по принцип да се използва аbs(). 
		А това if (isset($_COOKIE[session_name()])) {
		setcookie(session_name(), '', time()-42000, '/');
		} 
		го пиша за да изтрия cookie като му дам минала дата!
		by plamenyankov

===========================================================================================


===========================================================================================


===========================================================================================















