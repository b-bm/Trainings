Уточнение по материал от лекция 2

Здравейте, искам да направя едно уточнени, по материала от лекция 2, свързан с масивите. 
Отново с цел да не "плаша" начинаещите, избягвах да влизам в темата детайлно, и в следствие на това, се получи неразбиране на информацията.

Конкретно става дума за стойност по референция при обхождане в масив.
foreach ($myArray as &$val) {
    $val = 'some altered value';
}
unset($val);

Това е напълно валиден израз в PHP, който ще направи точно каквото си мислим.
Стойността на $val се предава по референция, тоест всяка нейна промяна, ще промени и оригиналната стойност в масива и в следствие масива (при ново обхождане, за пример) ще съдържа новата/променената стойност.

Много е важно да се премахне референцията на $val след края на цикъла.
Понеже тя ще сочи към последния елемент до който е бил foreach, и ако някъде по-надолу я променим, ще променим и този елемент от масива, което е опасно.
Махането на референцията и изтриването на променлива стават с unset();

Другият вариант, който може да ползваме за промяна на масива, ако не искаме, или не може да ползваме референция е :
foreach ($myArray as $key=>$val) {
  $myArray[$key]='some altered value';
}

В лекцията споменах, че работата с референция в масивите може да доведе до непредвидени резултати. 
Това е така, но имах предвид когато самите стойност на масива са зададени по референция.Примерно:

$a=1;
$b=2;
$myArray=array(&$a,&$b);

Масив създаден по този начин може да създаде сериозни проблеми, ако не внимаваме. 
Примерно, сортираме го, но след сортирането някой елемент е сменен по референция. 
Тогава сортирането вече не е валидно, или други подобни ситуации.

Надявам се, че сега нещата са малко по-ясни.

by gatakka

--> Благодаря за уточнението за стойност по референция при обхождане в масив 
За тези, които все още не са се убедели, ето доказателство, че ако не се използва unset() може да имаме неочакани резултати:
 
http://pastebin.com/AtL2zXGD

	$myArray = array(1, 2, 3);
 
	foreach ($myArray as &$val) {
		$val *= 2;
	}
	//  unset($val); // now uncomment and see the correct result

	foreach ($myArray as $val) {
		echo $val;
		echo '<br />';
	}

by Georgi Yankov









